// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

enum Action {
  CREATE
  READ
  UPDATE 
  DELETE
  LOGIN
  LOGOUT
}

model User {
  id String @id @default(uuid())
  fullName String
  email String @unique
  password String
  role UserRole @default(USER)
  registeredAt DateTime @default(now())

  data Data[]
  logs Log[]
  token Token[]
}

model Data {
  id String @id @default(uuid())
  name String 
  description String? @db.Text
  Address String
  birthDate DateTime @db.Date
  photoLink String?
  ownerId String
  createdAt DateTime @default(now())

  owner User @relation(fields: [ownerId], references: [id], onDelete: Cascade)
}

model Log {
  id String @id @default(uuid())
  message String?
  tableName String?
  action Action?
  recordId String?
  meta Json?
  userId String?
  apiEndpoint String?
  ip String
  createdAt DateTime @default(now())

  user User? @relation(fields: [userId], references: [id], onDelete: SetNull)
}

model Token {
  id String @id @default(uuid())
  token String @unique @db.VarChar(256)
  userId String
  valid Boolean @default(true)
  expiresAt DateTime
  usedAt DateTime?
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}